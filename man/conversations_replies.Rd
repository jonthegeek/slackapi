% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paths-conversations-conversations_replies.R
\name{conversations_replies}
\alias{conversations_replies}
\alias{req_conversations_replies}
\title{Get conversations replies}
\usage{
conversations_replies(
  channel,
  ts,
  latest = lubridate::now(),
  oldest = 0,
  inclusive = TRUE,
  include_all_metadata = FALSE,
  per_page = 200L,
  max_reqs = Inf,
  max_tries_per_req = 3,
  token = Sys.getenv("SLACK_API_TOKEN")
)

req_conversations_replies(
  channel,
  ts,
  latest = lubridate::now(),
  oldest = 0,
  inclusive = TRUE,
  include_all_metadata = FALSE,
  per_page = 200L,
  token = Sys.getenv("SLACK_API_TOKEN")
)
}
\arguments{
\item{channel}{(\code{character}) Conversation ID to fetch thread from.}

\item{ts}{(\code{character} or \code{datetime} or \code{double}) Unique identifier of either
a threadâ€™s parent message or a message in the thread. ts must be the
timestamp of an existing message with 0 or more replies. If there are no
replies then just the single message referenced by ts will return - it is
just an ordinary, unthreaded message.}

\item{latest}{(\code{datetime} or \code{double}) Only messages before this Unix
timestamp will be included in results.}

\item{oldest}{(\code{datetime} or \code{double}) Only messages after this Unix
timestamp will be included in results.}

\item{inclusive}{(\code{logical}) Include messages with \code{latest} or \code{oldest}
timestamp in results only when either timestamp is specified.}

\item{include_all_metadata}{(\code{logical}) Return all metadata associated with
this message.}

\item{per_page}{(\code{integer}) The maximum number of items to return. Fewer than
the requested number of items may be returned, even if the end of the list
hasn't been reached. Must be an integer under 1000.}

\item{max_reqs}{(\code{integer}) The maximum number of separate requests to
perform. Passed on to \code{\link[nectar:req_perform_opinionated]{nectar::req_perform_opinionated()}}.}

\item{max_tries_per_req}{(\code{integer}) The maximum number of times to attempt
each individual request. Passed on to \code{\link[nectar:req_perform_opinionated]{nectar::req_perform_opinionated()}}.}

\item{token}{(\code{character}) A bearer token provided by Slack. A later
enhancement will add the ability to generate this token. Slack token are
long-lasting, and should be carefully guarded.}
}
\value{
\code{conversations_replies()}: A thread of messages posted to a
conversation as a tibble. Note: The parent message is always included in
the response.

\code{req_conversations_replies()}: A \code{httr2_request} request object to
retrieve a thread of messages posted to a conversation as a tibble. Note:
The parent message is always included in the response.
}
\description{
Retrieve a thread of messages posted to a conversation
}
